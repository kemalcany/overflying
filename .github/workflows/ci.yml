name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-api:
    name: Test API
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'apps/api/pyproject.toml'

      - name: Install dependencies
        env:
          DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
        run: |
          cd apps/api
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Wait for PostgreSQL
        run: |
          timeout 30 bash -c 'until pg_isready -h localhost -p 5433 -U test; do sleep 1; done'

      - name: Run tests
        env:
          DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
          TEST_DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
        run: |
          cd apps/api
          pytest -v --cov=src --cov-report=term-missing --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./apps/api/coverage.xml
          flags: api
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Test Success Celebration
        if: success()
        run: |
          echo "========================================="
          echo "   API TESTS PASSED SUCCESSFULLY!"
          echo "========================================="
          echo ""
          echo "All tests completed without errors."
          echo "Coverage report generated successfully."
          echo ""
          echo "Build status: PASSING"
          echo "========================================="
