name: Deploy to GKE

on:
  workflow_call:
    inputs:
      environment_name:
        required: true
        type: string
      environment_url:
        required: true
        type: string
      deployment_name:
        required: true
        type: string
      namespace:
        required: true
        type: string
      container_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      project_id:
        required: true
        type: string
      region:
        required: true
        type: string
      cluster:
        required: true
        type: string
      service_name:
        required: true
        type: string
    secrets:
      GCP_SA_KEY:
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment_name }}
      url: ${{ inputs.environment_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ inputs.cluster }} \
            --region=${{ inputs.region }} \
            --project=${{ inputs.project_id }}

      - name: Apply deployment configuration
        run: |
          # If image_tag is provided, update the image; otherwise just apply the YAML
          if [ -n "${{ inputs.image_tag }}" ]; then
            kubectl set image deployment/${{ inputs.deployment_name }} \
              ${{ inputs.container_name }}=${{ inputs.image_tag }} \
              --namespace=${{ inputs.namespace }}
          else
            echo "No image tag provided, skipping image update"
          fi

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/${{ inputs.deployment_name }} \
            --namespace=${{ inputs.namespace }} --timeout=3m

      - name: Verify deployment
        run: |
          kubectl get pods --namespace=${{ inputs.namespace }} -l app=${{ inputs.container_name }}
          kubectl get service ${{ inputs.service_name }} --namespace=${{ inputs.namespace }} || true

      - name: Deployment Success
        run: |
          echo "========================================="
          echo "   DEPLOYMENT SUCCESSFUL!"
          echo "========================================="
          echo "Environment: ${{ inputs.environment_name }}"
          echo "Deployment: ${{ inputs.deployment_name }}"
          echo "Namespace: ${{ inputs.namespace }}"
          echo "Image: ${{ inputs.image_tag }}"
          echo "========================================="
