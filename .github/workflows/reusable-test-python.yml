name: Test Python App

on:
  workflow_call:
    inputs:
      app_path:
        required: true
        type: string
        description: 'Path to the app directory (e.g., apps/api)'
      python_version:
        required: false
        type: string
        default: '3.11'
      coverage_flags:
        required: true
        type: string
        description: 'Codecov flags (e.g., api, worker)'
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      nats:
        image: nats:2
        ports:
          - 4222:4222
          - 8222:8222
        options: >-
          --health-cmd "wget --spider -q http://localhost:8222/healthz"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'
          cache-dependency-path: '${{ inputs.app_path }}/pyproject.toml'

      - name: Install dependencies
        env:
          DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
        run: |
          cd ${{ inputs.app_path }}
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Wait for PostgreSQL
        run: |
          timeout 30 bash -c 'until pg_isready -h localhost -p 5433 -U test; do sleep 1; done'

      - name: Wait for NATS
        run: |
          timeout 30 bash -c 'until wget --spider -q http://localhost:8222/healthz; do sleep 1; done'

      - name: Run tests
        env:
          DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
          TEST_DATABASE_URL: postgresql+psycopg2://test:test@localhost:5433/test_db
          NATS_URL: nats://localhost:4222
        run: |
          cd ${{ inputs.app_path }}
          pytest -v --cov=src --cov-report=term-missing --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        if: always()
        with:
          file: ./${{ inputs.app_path }}/coverage.xml
          flags: ${{ inputs.coverage_flags }}
          name: ${{ inputs.coverage_flags }}-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Test Success
        if: success()
        run: |
          echo "========================================="
          echo "   ${{ inputs.coverage_flags }} TESTS PASSED!"
          echo "========================================="
          echo "All tests completed without errors."
          echo "Coverage report generated successfully."
          echo "Build status: PASSING"
          echo "========================================="
