apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-staging
  namespace: staging
  labels:
    app: api
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
      environment: staging
  template:
    metadata:
      labels:
        app: api
        environment: staging
        app.kubernetes.io/name: overflying-api
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: staging-app-sa
      containers:
      - name: api
        image: europe-west1-docker.pkg.dev/overflying-cluster/overflying-images/api:latest  # Updated by CI/CD
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          value: "postgresql+psycopg2://staging_user:gizmo123@localhost:5432/staging"
        - name: CORS_ORIGINS
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: cors-origins
        - name: NATS_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: nats-url
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.0
        args:
          - "--structured-logs"
          - "--port=5432"
          - "overflying-db:europe-west1:overflying-db"
        securityContext:
          runAsNonRoot: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: staging
  labels:
    app: api
    environment: staging
spec:
  type: LoadBalancer
  selector:
    app: api
    environment: staging
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  sessionAffinity: ClientIP
