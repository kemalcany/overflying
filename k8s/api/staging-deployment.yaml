apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-staging
  namespace: staging
  labels:
    app: api
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
      environment: staging
  template:
    metadata:
      labels:
        app: api
        environment: staging
    spec:
      serviceAccountName: staging-app-sa
      containers:
      - name: api
        image: europe-west1-docker.pkg.dev/overflying-cluster/overflying-images/api:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: database-url
        - name: CORS_ORIGINS
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: cors-origins              
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: staging
  labels:
    app: api
    environment: staging
spec:
  type: LoadBalancer
  selector:
    app: api
    environment: staging
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  sessionAffinity: ClientIP
